security:
    password_hashers:
       App\Entity\Client:
    #plaintext signifie que les mots de passe ne sont pas hashés
        algorithm: auto
    providers:
      app_user_provider:
        entity:
           # classe d'utilisateurs (elle peut avoir un autre nom que Utilisateur)
            class: App\Entity\Client
            property: login # propriété de la classe d'utilisateurs qui joue le rôle de login
    firewalls:
       dev:
           pattern: ^/(_(profiler|wdt)|css|images|js)/
           security: false
       main:
            form_login:
               # "login" is the name of the route created previously
               login_path: app_login
               check_path: app_login
            provider:  app_user_provider
            logout:
                # La route de deconnexion
                path: app_logout
                # La route sur laquelle doit être redirigé l'utilisateur après une déconnexion
                target: app_home
when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
